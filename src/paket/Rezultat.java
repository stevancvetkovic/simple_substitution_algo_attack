/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Rezultat.java
 *
 * Created on Mar 22, 2010, 2:37:54 PM
 */

package paket;

import javax.swing.JOptionPane;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author stevan
 */
public class Rezultat extends javax.swing.JFrame {

    /** Creates new form Rezultat */
    private Object[][] podaci = new Object[26][26];

    public Rezultat()
    {
        popuniTabelu();
        initComponents();
    }

    public void popuniTabelu()
    {
        Funkcije f = new Funkcije();
        Abeceda[] niz = new Abeceda[26];

        niz = f.vratiAbecedu();

        for(int i=0; i<niz.length; i++)
            podaci[i][0] = niz[i].getSlovo();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tTabela = new javax.swing.JTable();
        dDekodiraj = new javax.swing.JButton();
        dAutor = new javax.swing.JButton();
        dOtvoriDatoteku = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tKodiraniTekst = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        tDekodiraniTekst = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sifriranje metodom zamene karaktera");

        tTabela.setModel(new javax.swing.table.DefaultTableModel(
            podaci,
            new String [] {
                "Abeceda", "Ulazni tekst"
            }
        ));
        tTabela.setAutoscrolls(false);
        jScrollPane1.setViewportView(tTabela);

        dDekodiraj.setText("Dekodiraj");
        dDekodiraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dDekodirajActionPerformed(evt);
            }
        });

        dAutor.setText("O autoru");
        dAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dAutorActionPerformed(evt);
            }
        });

        dOtvoriDatoteku.setText("Otvori datoteku");
        dOtvoriDatoteku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dOtvoriDatotekuActionPerformed(evt);
            }
        });

        jLabel1.setText("Dekodirani tekst:");

        jLabel2.setText("Preslikavanja:");

        jLabel3.setText("Kodirani tekst:");

        tKodiraniTekst.setColumns(20);
        tKodiraniTekst.setLineWrap(true);
        tKodiraniTekst.setRows(5);
        tKodiraniTekst.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tKodiraniTekstKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(tKodiraniTekst);

        tDekodiraniTekst.setColumns(20);
        tDekodiraniTekst.setLineWrap(true);
        tDekodiraniTekst.setRows(5);
        jScrollPane3.setViewportView(tDekodiraniTekst);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dAutor)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dDekodiraj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                        .addComponent(dOtvoriDatoteku)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dDekodiraj)
                        .addComponent(dOtvoriDatoteku))
                    .addComponent(dAutor))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dOtvoriDatotekuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dOtvoriDatotekuActionPerformed
        JFileChooser fileopen = new JFileChooser();
        FileFilter filter = new FileNameExtensionFilter("txt datoteke", "txt");
        fileopen.addChoosableFileFilter(filter);

        int ret = fileopen.showDialog(null, "Otvori datoteku");

        if (ret == JFileChooser.APPROVE_OPTION)
        {
            File file = fileopen.getSelectedFile();
            String s = Funkcije.vratiSadrzaj(file);
            this.tKodiraniTekst.setText(s);

            this.generisiPodatke();
        }
    }//GEN-LAST:event_dOtvoriDatotekuActionPerformed

    private void dAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dAutorActionPerformed
                JOptionPane.showMessageDialog(this, "Stevan Cvetkovic\ncvetkovic.stevan@gmail.com", "O autoru", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_dAutorActionPerformed

    private void dDekodirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dDekodirajActionPerformed
        char[] ulaz = this.tKodiraniTekst.getText().toLowerCase().toCharArray();
        char[] kol0 = new char[26];
        char[] kol1 = new char[26];

        if(this.tKodiraniTekst.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this, "Unesite tekst u polje \"Kodirani tekst\" ili otvorite tekstualnu datoteku.", "Greska", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            for(int i=0; i<26; i++)
            {
                kol0[i] = this.tTabela.getValueAt(i, 0).toString().charAt(0);
                kol1[i] = this.tTabela.getValueAt(i, 1).toString().charAt(0);
            }

            for(int i=0; i<ulaz.length; i++)
            {
                for(int j=0; j<kol1.length; j++)
                {
                    if(ulaz[i] == kol1[j])
                        this.tDekodiraniTekst.append(String.valueOf(kol0[j]));
                }

                if(ulaz[i] == ' ')
                        this.tDekodiraniTekst.append(" ");
            }

            this.tDekodiraniTekst.append("\n\n");
        }
    }//GEN-LAST:event_dDekodirajActionPerformed

    private void tKodiraniTekstKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tKodiraniTekstKeyTyped
        this.generisiPodatke();
    }//GEN-LAST:event_tKodiraniTekstKeyTyped

    private void generisiPodatke()
    {
        Funkcije f = new Funkcije();
        Abeceda[] niz = new Abeceda[26];

        niz = f.obrada(this.tKodiraniTekst.getText().toLowerCase().toCharArray());

        for(int i=0; i<niz.length; i++)
        {
            podaci[i][1] = niz[i].getSlovo();
        }

        tTabela.setModel(new javax.swing.table.DefaultTableModel(
            podaci,
            new String [] {
                "Abeceda", "Ulazni tekst"
            }
        ));
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Rezultat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dAutor;
    private javax.swing.JButton dDekodiraj;
    private javax.swing.JButton dOtvoriDatoteku;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea tDekodiraniTekst;
    private javax.swing.JTextArea tKodiraniTekst;
    private javax.swing.JTable tTabela;
    // End of variables declaration//GEN-END:variables

}
